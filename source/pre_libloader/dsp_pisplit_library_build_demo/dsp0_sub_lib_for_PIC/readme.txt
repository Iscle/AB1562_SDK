The demo project just for demo of <how to build a sub-lib for PIC lib>
PIC sub-lib very seem with static lib, just add some speical option of "-Wall -g -fpic -mlongcalls -fmessage-length=0"

In fact, there are 3 step on a complete PIC lib.
    Step1: build a sub-lib for PIC,generate AAA.a,like this demo project.
    Step2: build a PIC lib, build some source file and AAA.a generated by Step1, to generate a xxx.o files, like the demo project of <dsp\project\mt2811a_evb\templates\dsp_pisplit_library_build_demo\dsp0>
    Step3: build a main project, the main project need link the PIC xxx.o, like the project of <dsp\project\mt2811a_evb\templates\dsp0_freertos_create_thread>
        You can reference <dsp\kernel\service\pre_libloader\dsp0\dsp0_pic_demo_portable\module.mk  line:10 to include xxx.o>

Usually, Can be combine Step1 and Step2, then will no need Step1.
    If have some confidentiality and resource concern, will be need Step1, like:
        Step1 do by Vendor1 to generate a PIC sub-lib of AAA.and
        Step2 do by Vendor2 to build a PIC lib of xxx.o
        Step3 do by Vendor3 to link the PIC lib to main bin to use the PIC lib.
    If Vendor1 and Vendor2 are same person, then Step1 can be omit, means AAA.a is source file for Vendor1.
    If Vendor1 and Vendor2 are diff person, then need Step1, like: Cadence and Airoha, or Airoha and Customer.


Usage:
    1. put the project to the path of <dsp\project\mt2811a_evb\test_loads\audio_pisplit_libraies>.
        you also can put to other path, just modify the <LIB_SOURCE_PATH> in Makefile.
    2. Add you source files to this project.
    3. use "make clean" and "make" to build.
