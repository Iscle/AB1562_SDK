# Copyright (c) 2016 by Cadence Design Systems, Inc.  ALL RIGHTS RESERVED.
# These coded instructions, statements, and computer programs are the
# copyrighted works and confidential proprietary information of Cadence.
# They may not be modified, copied, reproduced, distributed, or disclosed to
# third parties in any manner, medium, or form, in whole or in part, without
# the prior written consent of Cadence.

package com.tensilica.xide.core.mccfg.rules
 
global MCMessageSet messageSet;
global CoreIsaController_T10XX controller;
global ConfigBuildOptions configBuildOptions;

expander ISARules.dsl

###
# rules for RG.3 which are non-vision
###

rule "GS: Sync"
    condition:
    	'sg_gather' requires 'sync'
    failure:
    	Report error 
end
rule "GS: EarlyRestart"
    condition:
    	'sg_scatter' requires 'early_restart'
    failure:
    	Report error 
end

rule "GS: DRAM:16k"
    condition:
		'sg_scatter' together with 'lmem_3.sizeBytes' greater than 0 requires that 'lmem_3.sizeBytes' is ge 16384
    failure:
    	Report custom error: "Gather/Scatter requires that the DataRAM size is at least 16kB",["sg_scatter","sg_gather","lmem.3"]
end

rule "GS: Prefetch"
    condition:
        'sg_scatter' conflicts with 'prefetchEntries'
    failure:
        Report error 
end

rule "GS: PSO"
    condition:
        'sg_scatter' requires that 'pso_domains' is "None"
    failure:
        Report error 
end

rule "GS: ABI"
    condition:
        'sg_scatter' requires that 'sw_abi' is "windowed"
    failure:
        Report error 
end

# old rule is if dram1 configured must be same as dram0
rule "GS: 2DRAM:Size"
    condition:
        'sg_scatter' together with 'lmem_4.sizeBytes' greater than 0 requires symmetry of 'lmem_3.sizeBytes'
    failure:
        Report custom error: "Gather/Scatter with 2 DataRAM requires that both DataRAMs are the same size",["sg_scatter","sg_gather","lmem.4","lmem.3"]
end

# ecc lsex rules were captured unusually for rg.123
# lx7 general simplifies these

rule "GS: MSEX:ECC"
    condition:
        'sg_scatter' together with 'master_exclaccess' equals 1 requires that 'dataMemErrorType' equals 2
    failure:
        Report custom error: "Gather/Scatter with Master Exclusive Access requires that ECC is selected on the data side",["sg_scatter","sg_gather","dataMemErrorType","master_exclaccess"]
end

rule "GS: NoMSEX:NoECC"
    condition:
		'sg_scatter' together with 'master_exclaccess' equals 0 requires that 'dataMemErrorType' equals 0
    failure:
    	Report custom error: "Gather/Scatter without Master Exclusive Access requires that ECC is not selected on the data side",["sg_scatter","sg_gather","dataMemErrorType","master_exclaccess"]
end

rule "GS: MSSEX:ECC"
    condition:
        'sg_scatter' together with 'slave_exclaccess' equals 1 requires that 'dataMemErrorType' equals 2
    failure:
        Report custom error: "Gather/Scatter with Slave Exclusive Access requires that ECC is selected on the data side",["sg_scatter","sg_gather","dataMemErrorType","slave_exclaccess"]
end

rule "GS: NoMSSEX:NoECC"
    condition:
        'sg_scatter' together with 'slave_exclaccess' equals 0 requires that 'dataMemErrorType' equals 0
    failure:
        Report custom error: "Gather/Scatter without Slave Exclusive Access requires that ECC is not selected on the data side",["sg_scatter","sg_gather","dataMemErrorType","slave_exclaccess"]
end

rule "GS: MSSEX:EXMasters"
    condition:
        'sg_scatter' together with 'slave_exclaccess' equals 1 requires that 'num_extn_exclmaster' equals 8
    failure:
        Report custom error: "Gather/Scatter with Slave Exclusive Access requires that Number of Exclusive Masters is 8",["sg_scatter","sg_gather","num_extn_exclmaster","slave_exclaccess"]
end

rule "GS: NoMSSEX:NoEXMasters"
    condition:
        'sg_scatter' together with 'slave_exclaccess' equals 0 requires that 'num_extn_exclmaster' equals 0
    failure:
        Report custom error: "Gather/Scatter without Slave Exclusive Access requires that Number of Exclusive Masters is 0",["sg_scatter","sg_gather","num_extn_exclmaster","slave_exclaccess"]
end
